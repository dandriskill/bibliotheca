// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="App"
      >
        <div
          class="App-inner"
        >
          <h1>
            BIBLIOTHECA
          </h1>
          <h3>
            The Library App
          </h3>
          <div
            class="divider-container"
          >
            <div
              class="divider"
            />
          </div>
          <h1
            class="faded-text"
          >
            Ω
          </h1>
          <div
            class="Subheader"
          >
            <h2
              class="volumes-count"
            >
              Volumes: 
              0
            </h2>
            <span
              class="search-bar"
            >
              <div
                class="SearchBar"
              >
                <input
                  class="searchbar-inner"
                  placeholder="Search by title or author"
                  type="text"
                />
              </div>
            </span>
            <button
              class="add-button"
              type="button"
            >
              Add +
            </button>
          </div>
          <div
            class="BooksHeader"
          >
            <div
              class="books-header-title"
            >
              Title
            </div>
            <div
              class="books-header-author"
            >
              Author
            </div>
            <div
              class="books-header-pages"
            >
              Pages
            </div>
            <div
              class="books-header-available"
            >
              Available
            </div>
            <div
              class="books-header-overdue"
            >
              Overdue
            </div>
            <div
              class="books-header-tools"
            />
          </div>
          <div
            class="Library"
          >
            <div
              class="fallback-text"
            >
              No volumes available.
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      class="ReactModalPortal"
    />
  </body>,
  "container": <div>
    <div
      class="App"
    >
      <div
        class="App-inner"
      >
        <h1>
          BIBLIOTHECA
        </h1>
        <h3>
          The Library App
        </h3>
        <div
          class="divider-container"
        >
          <div
            class="divider"
          />
        </div>
        <h1
          class="faded-text"
        >
          Ω
        </h1>
        <div
          class="Subheader"
        >
          <h2
            class="volumes-count"
          >
            Volumes: 
            0
          </h2>
          <span
            class="search-bar"
          >
            <div
              class="SearchBar"
            >
              <input
                class="searchbar-inner"
                placeholder="Search by title or author"
                type="text"
              />
            </div>
          </span>
          <button
            class="add-button"
            type="button"
          >
            Add +
          </button>
        </div>
        <div
          class="BooksHeader"
        >
          <div
            class="books-header-title"
          >
            Title
          </div>
          <div
            class="books-header-author"
          >
            Author
          </div>
          <div
            class="books-header-pages"
          >
            Pages
          </div>
          <div
            class="books-header-available"
          >
            Available
          </div>
          <div
            class="books-header-overdue"
          >
            Overdue
          </div>
          <div
            class="books-header-tools"
          />
        </div>
        <div
          class="Library"
        >
          <div
            class="fallback-text"
          >
            No volumes available.
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
